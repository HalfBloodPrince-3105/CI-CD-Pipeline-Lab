name: Java CI/CD with Gradle and Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          clean: false

      - name: Grant execute permission to Gradle wrapper (Linux/macOS only)
        if: runner.os != 'Windows'
        run: chmod +x ./gradlew

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.6

      - name: Build the JAR
        run: ./gradlew clean bootJar

      - name: Verify JAR file location
        run: ls -l build/libs

      # Windows-specific command
      - name: Debug Build Context (Windows)
        if: runner.os == 'Windows'
        run: dir

      # Linux/macOS command
      - name: Debug Build Context (Linux/macOS)
        if: runner.os != 'Windows'
        run: ls -la .

  docker:
    needs: build  # This ensures Docker runs only after the build job finishes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          clean: false

      - name: Copy JAR from Linux Build
        run: cp build/libs/*.jar app.jar

      - name: Setup Docker Build
        run: |
          docker buildx create --use
          docker buildx inspect --bootstrap

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker image
        run: |
          docker buildx build --platform linux/amd64 -t "$(echo -n "${{ secrets.DOCKER_USERNAME }}/java-app:${{ github.sha }}" | tr -d '\n')" --push .
